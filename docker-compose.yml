version: '3.8'
services:
  db:
    container_name: db
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    environment:
      - POSTGRES_DB=db_development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/myapp
    ports:
      - "3001:3000"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/db_development
      - REDIS_URL=redis://redis:6379/0
      - VIRTUAL_PORT=3001
      - VIRTUAL_HOST=litcode.es
      - LETSENCRYPT_HOST=litcode.es
      - LETSENCRYPT_EMAIL=santiago.delafuente@bue.edu.ar
    command: >
      bash -c "
        rm -f tmp/pids/server.pid &&
        echo 'Postgres is ready, running the migrations...' &&
        bundle exec rails db:migrate &&
        rails server -b 0.0.0.0
      "
  tailwindcss:
    container_name: tailwindcss
    build: .
    command: rails tailwindcss:watch[always]
    volumes:
      - .:/myapp
#  nginx:
#    container_name: nginx
#    build:
#      context: .
#      dockerfile: Dockerfile.nginx
#    ports:
#      - 80:80
#    depends_on:
#      - web
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d:rw
      - ./html:/usr/share/nginx/html:rw
    depends_on:
      - nginx-proxy
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 9090:8080