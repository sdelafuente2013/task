version: '3.8'
services:
  db:
    container_name: db
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    environment:
      - POSTGRES_DB=db_development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/myapp
      - ./certs:/etc/letsencrypt
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/db_development
      - REDIS_URL=redis://redis:6379/0
    command: >
      bash -c "
        rm -f tmp/pids/server.pid &&
        echo 'Postgres is ready, running the migrations...' &&
        bundle exec rails db:migrate &&
        rails server -b 0.0.0.0
      "
  tailwindcss:
    container_name: tailwindcss
    build: .
    command: rails tailwindcss:watch[always]
    volumes:
      - .:/myapp
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx
    volumes:
      - html_vol:/var/www/html
      - ./certs:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  certbot:
    container_name: certbot-ssl
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - html_vol:/var/www/html
#     generate certificate ssl:
#    command: certonly --webroot --webroot-path=/var/www/html --email santiago.delafuente@bue.edu.ar -d litcode.es --agree-tos --non-interactive --keep-until-expiring
#    update certificate ssl:
    command: renew --quiet
    depends_on:
      - nginx
  adminer:
    container_name: client_db_web
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 9090:8080
volumes:
  cert_vol: